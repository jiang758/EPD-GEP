# 开发人员：九重！
# 开发时间：2022-03-3020:03
# 开发名称:数据检测.py
# 开发应用:PyCharm
import math
from math import exp,log,sqrt

def Function(Inputs):
    '''Inputs'''
    a=Inputs[0]
    if len(Inputs)>=2 :
        b=Inputs[1]
    if len(Inputs)>=3 :
        c=Inputs[2]
    if len(Inputs)>=4 :
        d=Inputs[3]
    if len(Inputs)>=5 :
        e=Inputs[4]
    if len(Inputs)>=6 :
        f=Inputs[5]
    if len(Inputs)>=7 :
        g=Inputs[6]
    if len(Inputs)>=8 :
        h=Inputs[7]
    if len(Inputs)>=9 :
        i=Inputs[8]
    if len(Inputs)>=10 :
        j=Inputs[9]
    if len(Inputs)>=11 :
        k=Inputs[10]
    if len(Inputs)>=12 :
        l=Inputs[11]
    if len(Inputs)>=13 :
        n=Inputs[12]
    if len(Inputs)>=14 :
        m=Inputs[13]
    if len(Inputs)>=15 :
        o=Inputs[14]
    if len(Inputs)>=16 :
        p=Inputs[15]
    if len(Inputs)>=17 :
        r=Inputs[16]

    # **********************************************    10000 代后最佳解   **********************************************
    # result_fitness=   7188.7572247554635
    # ln/cP-RR/++bRfadfdea?fefg? : [0, 6, 5, 6, 6, 1, 4, 1, 2, 6, 3, 9, 4] : [0.253, -0.889, -0.715, -0.243, -0.092, -0.016, 0.839, 0.73, -0.843, 0.202]:lnPcexpblnRP-Rcgbcaadgb?a?df? : [7, 2, 0, 6, 2, 8, 8, 9, 2, 7, 3, 6, 9] : [0.629, -0.844, 0.533, 0.776, 0.915, 0.253, 0.008, 0.058, -0.046, 0.704]:ln/deaexpRln*eePgafagagaffgef : [3, 8, 3, 0, 4, 2, 4, 3, 9, 0, 0, 6, 8] : [-0.589, -0.445, -0.2, -0.382, -0.355, -0.7, 0.275, 0.388, 0.168, -0.524]:R-*exp+?Rabadfcfeg?gafegdbe : [9, 1, 2, 5, 0, 2, 0, 4, 5, 9, 3, 6, 2] : [-0.104, 0.093, 0.451, 0.112, -0.794, 0.582, 0.89, 0.507, 0.91, -0.264]:ln/fP+Q?Pg?*?ggccb?gabedeg : [0, 4, 0, 6, 9, 1, 7, 1, 2, 4, 5, 9, 9] : [0.165, 0.529, -0.715, -0.844, 0.417, -0.76, 0.078, 0.635, 0.323, 0.202]:Q/cbgfbb-Qg*gfgaccdegefdg : [9, 8, 6, 6, 9, 5, 7, 2, 1, 9, 1, 2, 8] : [0.174, 0.658, 0.109, -0.3, 0.1, 0.961, 0.696, 0.551, -0.018, -0.071]:
    # ((0.264*a + 0.264*b + exp(1/a))*(sqrt(c/b) + log(c**2) + log(d/e) + log(f/(sqrt(g**2) + 0.165)**2) + log(c*(a + d)**2*(f**2 + 1)**2/(b*(f**2 + 1) - f*(a + d))**2)) - 1)/(0.264*a + 0.264*b + exp(1/a))
    # Time: 24698.592170199998
    # **********************************************    10000 代后最佳解   **********************************************
    # result_fitness=   7200.1320107787815
    # +/?*QPQbaexpa?b?a?e?baefcf? : [9, 7, 7, 8, 8, 9, 0, 1, 7, 5, 5, 1, 1] : [-0.629, 0.847, -0.129, -0.173, 0.599, -0.37, 0.864, 0.262, 0.376, -0.962]:lnR/bc+?lnaQfegcbg?aeedcb?d : [3, 0, 9, 1, 2, 4, 0, 2, 8, 9, 2, 8, 9] : [0.759, 0.871, 0.23, 0.145, -0.821, 0.38, 0.533, -0.74, -0.327, -0.022]:/fQ*?+ebePb?acdgdcgfe?dce : [3, 3, 5, 2, 4, 8, 0, 6, 9, 9, 2, 0, 8] : [-0.362, -0.465, -0.724, 0.94, 0.587, -0.588, 0.871, -0.174, 0.063, 0.11]:Q*Rexp//fca--efgbebbgbc?ggb : [2, 2, 1, 4, 3, 5, 9, 0, 7, 1, 5, 0, 2] : [-0.586, 0.964, -0.782, -0.158, -0.992, 0.187, -0.969, -0.271, 0.116, -0.879]:+/?dlnPexpecexpaQg?f?eace?cfcb : [3, 6, 3, 9, 5, 4, 2, 3, 7, 4, 0, 0, 6] : [0.674, -0.379, 0.587, -0.379, -0.751, 0.343, 0.255, 0.058, 0.694, -0.494]:lnc/bc+aca-+c???ddbabbbbeb : [8, 6, 0, 1, 0, 9, 3, 0, 2, 7, 5, 0, 2] : [-0.425, 0.944, 0.285, 0.77, -0.77, 0.591, 0.755, -0.341, 0.812, -0.734]:
    # a**2*sqrt(exp(a))/sqrt(b) + d/log(exp(2*e)) + 1.03142124625879*f/sqrt(b + e) + sqrt(c*exp(-a/(e - f + g))/f) + log(c) + log(c/b) - 1.341
    # Time: 26462.663404500003
    # **********************************************    10000 代后最佳解   **********************************************
    # result_fitness=   7196.935939323237
    # +?lnP/+bc-/e*dagccdcceca?? : [6, 6, 7, 5, 3, 9, 7, 3, 7, 7, 2, 6, 2] : [0.848, 0.537, 0.927, -0.007, 0.088, -0.779, -0.89, 0.582, -0.937, 0.532]:QgcexpPRexp-edP+bccbbcbgcaefg : [4, 8, 9, 3, 6, 9, 7, 3, 9, 3, 4, 3, 4] : [0.931, 0.922, 0.128, 0.308, -0.301, -0.344, -0.235, 0.605, -0.509, -0.752]:R-QcP/c/bcedcac?aa?ca??e? : [3, 4, 3, 1, 8, 1, 1, 7, 3, 7, 3, 2, 4] : [-0.435, 0.184, -0.511, -0.888, -0.862, 0.147, 0.745, 0.559, 0.978, -0.938]:R-f-eR-lngR+d?d?bdbacg?ged : [4, 8, 9, 3, 3, 9, 7, 5, 9, 4, 4, 3, 4] : [0.146, -0.397, -0.444, 0.308, -0.473, -0.344, -0.024, 0.605, -0.02, -0.752]:lnP/-gcPd?expbeg?dfdffacdaf? : [6, 2, 9, 5, 0, 8, 1, 9, 3, 8, 5, 1, 0] : [-0.578, 0.561, -0.755, 0.965, -0.868, -0.818, -0.182, 0.347, 0.214, -0.245]:lnP/+bclnRPexp/eg?ge?f?gab??f : [6, 3, 6, 1, 8, 7, 2, 6, 9, 3, 2, 5, 3] : [0.486, -0.154, 0.369, -0.144, 0.277, -0.409, 0.495, 0.864, -0.943, -0.732]:
    # sqrt(g) + log((c + log(exp(-2*e/g)))**2/b**2) + log((a*g/d + c - e)**2/b**2) + log((c - d**2)**2/g**2) - 0.89 - 1/(e - f + 1/(g - log(1/(d - 0.473)))) - 1/(c - sqrt(c**4/b**2))
    # Time: 29778.3829147
    # **********************************************    10000 代后最佳解   **********************************************
    # result_fitness=   7193.141188070378
    # R//f-lnPc+bbgcc?ebbfgagdac : [6, 2, 7, 3, 2, 1, 2, 6, 6, 5, 1, 8, 1] : [-0.317, 0.789, 0.639, -0.244, 0.752, -0.507, -0.369, 0.408, 0.351, 0.636]:R+aQ//RQdcPQcbcb?gegbcaea : [6, 9, 3, 2, 0, 9, 5, 0, 6, 3, 1, 3, 8] : [0.035, 0.056, 0.165, 0.743, 0.343, -0.42, -0.595, 0.251, 0.163, 0.953]:R//cQRe/bQgefbacg?eaef??c : [1, 2, 1, 7, 6, 9, 8, 7, 4, 5, 2, 0, 9] : [0.646, 0.715, 0.12, 0.102, -0.307, -0.029, -0.264, 0.164, 0.6, 0.524]:ln-Pbccbafaaeabefdfegcadac : [5, 8, 5, 4, 1, 1, 7, 0, 5, 2, 2, 3, 3] : [-0.268, 0.165, 0.051, -0.983, -0.607, -0.821, 0.608, 0.408, -0.757, 0.475]:?gea-b*a?aa+ceabbaaac?df? : [3, 7, 6, 1, 4, 3, 6, 5, 5, 1, 4, 6, 5] : [-0.963, -0.86, 0.01, 0.265, 0.745, 0.568, 0.097, 0.283, 0.285, 0.206]:
    # f*log(b + g)/(b**2 - c) + log(-b + c**2) + 0.265 + 1/(a + sqrt(c**(3/2)/d)) + c*sqrt(g)/(b*sqrt(e))
    # Time: 39375.886316000004
    try:

        return ((0.264*a + 0.264*b + exp(1/a))*(sqrt(c/b) + log(c**2) + log(d/e) + log(f/(sqrt(g**2) + 0.165)**2) + log(c*(a + d)**2*(f**2 + 1)**2/(b*(f**2 + 1) - f*(a + d))**2)) - 1)/(0.264*a + 0.264*b + exp(1/a))
    except:
        # print("运算输错")
        return "error"


file=open("test2.txt",'r')
num,v_num = file.readline().split()
num, v_num = int(num), int(v_num)
Inputs=[]
Outputs=[]
for line in file:
    Input=[]
    Output=[]
    for i in range(len(line.split())):
        if i<v_num:
            Input.append(float(line.split()[i]))
        else:
            Output.append(float(line.split()[i]))
    Inputs.append(Input)
    Outputs.append(Output)

summ=0
for i in range(len(Inputs)):
    summ +=(Function(Inputs[i])-Outputs[i][0])**2
    print(Function(Inputs[i]),Outputs[i][0])

RSME=math.sqrt(summ/len(Inputs))
print("RSME",RSME)

